#include<bits/stdc++.h>
using namespace std;

int max(int a, int b)
{
    if(a>b)
        return a;
    else
        return b;
}

int knapsack(int W,int wt[], int val[], int n)
{
    vector<vector<int>> dp(n+1,vector<int>(W+1));
    int i,w;

    for(i=0; i<=n; i++) {
        for(w=0; w<=W; w++) {
            if(i==0 || w==0)
                dp[i][w] = 0;
            else if(wt[i-1]<=w) {
                dp[i][w] = max(0+dp[i-1][w],val[i-1]+dp[i-1][w-wt[i-1]]);
            } else {
                dp[i][w] = dp[i-1][w];
            }
        }
    }
    return dp[n][W];
}

int main()
{
    int profit[] = {60,100,120};
    int wt[] = {10,20,30};
    int w = 50;
    int n = 3;
    cout<<knapsack(w,wt,profit,n);
    return 0;
}
